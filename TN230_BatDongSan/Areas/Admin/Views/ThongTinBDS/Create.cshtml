@model DbContextModel.Framework.ThongTinBDS

@{
    ViewBag.Title = "Thêm mới bất động sản";
}
@ViewBag.UserName

@using (Html.BeginForm("Create", "ThongTinBDS", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Thêm mới</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.TieuDe, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TieuDe, null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group d-flex flex-row">
        <div>
            @Html.LabelFor(model => model.ChieuDai, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChieuDai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChieuDai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.ChieuRong, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChieuRong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChieuRong, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.MoTa, 10, 20, new { @class = "form-control ckeditor" })
            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SDTChuBan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SDTChuBan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SDTChuBan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group d-flex flex-row flex-wrap justify-content-between col-md-10">
        <div>
            @Html.LabelFor(model => model.Huong.TenHuong, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.DropDownList("MaHuong", null, htmlAttributes: new { @class = "p-2 border-0 mr-2 rounded " })
                @Html.ValidationMessageFor(model => model.Huong.MaHuong, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.LoaiBD.TenLoai, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.DropDownList("MaLoai", null, htmlAttributes: new { @class = "p-2 border-0 mr-2 rounded " })
                @Html.ValidationMessageFor(model => model.MaLoai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="">
            @Html.LabelFor(model => model.KhuDanCu.TenKhuDanCu, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.DropDownList("MaQuanHuyen", null, htmlAttributes: new { @class = "p-2 border-0 mr-2 rounded" })
                @Html.ValidationMessageFor(model => model.MaQuanHuyen, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.KhuDanCu.TenKhuDanCu, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.DropDownList("MaKhuDanCu", null, htmlAttributes: new { @class = "p-2 border-0 mr-2 rounded" })
                @Html.ValidationMessageFor(model => model.MaKhuDanCu, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label>Hình ảnh cung cấp</label>
        <div class="custom-file col-md-10 mx-3">
            <input type="file" class="files" id="files" name="files" multiple>
            <label class="custom-file-label" for="files">Chọn hình ảnh upload</label>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" id="btn-create" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở về trang quản lý bất động sản", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#btn-create").attr("disabled", true)

        $(".files").on("change", function () {
            console.log($(this)[0].files);
            if ($(this)[0].files.length >= 3) {
                $("#btn-create").removeAttr("disabled")
            } else {
                $("#btn-create").attr("disabled", true)
            }
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
    </script>
}
